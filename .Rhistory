ylab("Focal Depth (km)")+
ggtitle("Trends of Focal Depth in each continent")
box_4 <- ggplot(df_2,aes(x=Depth_class,y=Focal_Depth_km))+
geom_boxplot(aes(color=Depth_class))+ylab("Focal Depth")+
xlab('Depth Class')+guides(color=guide_legend(title="Depth Class"))+
ggtitle("Trends of Focal Depth with respect to Depth class")
library(maps)
library(grid)
library(RColorBrewer)
wmap <- borders("world",colour = "gray50",fill="gray50")
eqmap <- ggplot() + wmap
eqmap <- eqmap + geom_point(data=df,aes(x=as.numeric(Longitude),y=as.numeric(Latitude),color=Mag)) +ggtitle("Epicenters of Earthquakes on World Map")+
xlab("Longitude") + ylab("Latitude")
myPalette <- colorRampPalette(rev(brewer.pal(11,"Spectral")))
sc1 <- scale_colour_gradientn(colours = myPalette(100))
map_1 <- eqmap + sc1
#plot of mag and depth
library(ggplot2)
library(maps)
library(grid)
wmap2 <- borders("world",colour = "darkgoldenrod1",fill="darkgoldenrod1")
magdepmap <- ggplot() + wmap2
magdepmap <-  magdepmap +
geom_point(data = df_2, alpha = 0.25,aes(x = Longitude, y = Latitude, size = Mag, colour = Focal_Depth_km)) +
labs(x = NULL, y = NULL) +
scale_colour_gradient("Depth [km]", high = "red") +
scale_size("Magnitude") +
theme_classic() +
theme(axis.line = element_blank(), axis.text = element_blank(),
axis.ticks = element_blank(),
plot.margin=unit(c(3, 0, 0, 0),"mm"),
legend.text = element_text(size = 6),
legend.title = element_text(size = 8, face = "plain"),
panel.background = element_rect(fill='#D6E7EF'))
wmap_depth <- borders("world",colour = "gray50",fill="gray50")
eqmap_depth <- ggplot() + wmap_depth
eqmap_depth <- eqmap_depth + geom_point(data=df_2,aes(x=as.numeric(Longitude),y=as.numeric(Latitude),color=Focal_Depth_km)) +ggtitle("Focal Depth of Epicenters of Earthquakes on World Map")+
xlab("Longitude") + ylab("Latitude")
myPalette <- colorRampPalette(rev(brewer.pal(11,"Spectral")))
sc1_depth <- scale_colour_gradientn(colours = myPalette(100))
map_2 <- eqmap_depth + sc1_depth
#correlation for entire df_2 dataset
df_2_new <- df_2[,c(1,3,4,5,6,7,9)]
summary(df_2_new)
head(df_2_new)
nrow(df_2_new)
library(ggcorrplot)
library(corrplot)
res <- cor(df_2_new)
View(df_2_new)
View(df_2)
View(df)
#Removing unnecessary columns from main dataset
df <- data[-c(2:8,14,16,18,20,22,24,26,28,30,32,34,36,38)]
View(df)
#Reading the main dataset
data <- read.csv("C:/Users/Muthug/Desktop/INFO521 Intro to ML/fpquake.csv")
#Removing unnecessary columns from main dataset
df <- data[-c(2:8,14,16,18,20,22,24,26,28,30,32,34,36,38)]
#Categorizing Earthquake Magnitude on the basis of Richter Scale
df$Mag_class <- ifelse(df$Mag>=4&df$Mag<=4.9,"Light",NA)
df$Mag_class <- ifelse(df$Mag>=5&df$Mag<=5.9,"Moderate",df$Mag_class)
df$Mag_class <- ifelse(df$Mag>=6&df$Mag<=6.9,"Strong",df$Mag_class)
df$Mag_class <- ifelse(df$Mag>=7&df$Mag<=7.9,"Major",df$Mag_class)
df$Mag_class <- ifelse(df$Mag>=8&df$Mag<=9.9,"Great",df$Mag_class)
#Categorizing Earthquakes on the basis of Focal Depth
df$Depth_class <- ifelse(df$Focal_Depth_km>=0&df$Focal_Depth_km<=70,"Shallow",NA)
df$Depth_class <- ifelse(df$Focal_Depth_km>=71&df$Focal_Depth_km<=300,"Intermediate",df$Depth_class)
df$Depth_class <- ifelse(df$Focal_Depth_km>=301&df$Focal_Depth_km<=700,"Deep",df$Depth_class)
#Converting columns into factor type of data
df$Country <- as.factor(df$Country)
df$Continent <- as.factor(df$Continent)
df$Tectonic_Plate <- as.factor(df$Tectonic_Plate)
df$Mag_class <- as.factor(df$Mag_class)
df$Depth_class <- as.factor(df$Depth_class)
#Removing unwanted columns from main dataset
df <- df[-c(8,10:18)]
summary(df)
#Reading the new subset
data_2 <- read.csv("C:/Users/Muthug/Desktop/INFO521 Intro to ML/fpquake2.csv")
summary(data_2)
#Removing unnecessary columns from subset
df_2 <- data_2[-c(2:8,14,16,18,20,22,24,26,28,30,32,34,36,38)]
#Categorizing Earthquake Magnitude on the basis of Richter Scale
df_2$Mag_class <- ifelse(df_2$Mag>=4&df_2$Mag<=4.9,"Light",NA)
df_2$Mag_class <- ifelse(df_2$Mag>=5&df_2$Mag<=5.9,"Moderate",df_2$Mag_class)
df_2$Mag_class <- ifelse(df_2$Mag>=6&df_2$Mag<=6.9,"Strong",df_2$Mag_class)
df_2$Mag_class <- ifelse(df_2$Mag>=7&df_2$Mag<=7.9,"Major",df_2$Mag_class)
df_2$Mag_class <- ifelse(df_2$Mag>=8&df_2$Mag<=9.9,"Great",df_2$Mag_class)
#Categorizing Earthquakes on the basis of Focal Depth
df_2$Depth_class <- ifelse(df_2$Focal_Depth_km>=0&df_2$Focal_Depth_km<=70,"Shallow",NA)
df_2$Depth_class <- ifelse(df_2$Focal_Depth_km>=71&df_2$Focal_Depth_km<=300,"Intermediate",df_2$Depth_class)
df_2$Depth_class <- ifelse(df_2$Focal_Depth_km>=301&df_2$Focal_Depth_km<=700,"Deep",df_2$Depth_class)
#Converting columns into factor type of data
df_2$Country <- as.factor(df_2$Country)
df_2$Continent <- as.factor(df_2$Continent)
df_2$Tectonic_Plate <- as.factor(df_2$Tectonic_Plate)
df_2$Mag_class <- as.factor(df_2$Mag_class)
df_2$Depth_class <- as.factor(df_2$Depth_class)
#Removing unwanted columns from subset
df_2 <- df_2[-c(8,10:18)]
summary(df_2)
library(ggplot2)
#Creating tables
df_Cont <- table(df$Continent)
df_Nation <- table(df$Country)
df_Plate <- table(df$Tectonic_Plate)
df_Magclass <- table(df$Mag_class)
df_Depthclass <- table(df$Depth_class)
#Barplots for the tables created above
bp_1 <- ggplot(df,aes(Continent))+geom_bar()+xlab("Continent")+ylab("Number of Earthquakes")+ggtitle("Number of Earthquake Occurences in each continent")
bp_2 <- ggplot(df,aes(Tectonic_Plate))+geom_bar()+xlab("Tectonic Plate")+ylab("Number of Earthquakes")+ggtitle("Number of Earthquake Occurences in each tectonic plate")+
theme(axis.text.x = element_text(angle = 90))
bp_3 <- ggplot(df,aes(Mag_class))+geom_bar()+xlab("Magnitude Class based on Richter scale")+ylab("Number of Earthquakes")+ggtitle("Number of Earthquake Occurences with respect to Magnitude class")
bp_4 <- ggplot(df_2,aes(Depth_class))+geom_bar()+xlab("Depth Class based on Focal Depth of Earthquake")+ylab("Number of Earthquakes")+ggtitle("Number of Earthquake Occurences with respect to Depth class")
library(dplyr)
yearly_counts <- df %>%
count(Year,Continent)
lp_1 <- ggplot(data=yearly_counts,aes(x=Year,y=n,color=Continent))+
ylab('Frequency')+
geom_line()+
facet_wrap(facets = vars(Continent))+
ggtitle("Number of Earthquake Occurences in each continent over the years")
lp_2 <- ggplot(data=df,aes(x=Year,y=Mag))+
geom_line(aes(color=Continent),size=1)+
facet_wrap(facets = vars(Continent))+
ggtitle("Magnitude of earthquakes in each continent over the years")
box_1 <- ggplot(df,aes(x=Continent,y=Mag))+
geom_boxplot(aes(color=Continent))+
ylab("Magnitude")+
ggtitle("Trends of Magnitude in each continent")
box_2 <- ggplot(df,aes(x=Mag_class,y=Mag))+
geom_boxplot(aes(color=Mag_class))+ylab("Magnitude")+
xlab('Magnitude Class')+guides(color=guide_legend(title="Magnitude Class"))+
ggtitle("Trends of Magnitude with respect to Magnitude class")
box_3 <- ggplot(df_2,aes(x=Continent,y=Focal_Depth_km))+
geom_boxplot(aes(color=Continent))+
ylab("Focal Depth (km)")+
ggtitle("Trends of Focal Depth in each continent")
box_4 <- ggplot(df_2,aes(x=Depth_class,y=Focal_Depth_km))+
geom_boxplot(aes(color=Depth_class))+ylab("Focal Depth")+
xlab('Depth Class')+guides(color=guide_legend(title="Depth Class"))+
ggtitle("Trends of Focal Depth with respect to Depth class")
library(maps)
library(grid)
library(RColorBrewer)
wmap <- borders("world",colour = "gray50",fill="gray50")
eqmap <- ggplot() + wmap
eqmap <- eqmap + geom_point(data=df,aes(x=as.numeric(Longitude),y=as.numeric(Latitude),color=Mag)) +ggtitle("Epicenters of Earthquakes on World Map")+
xlab("Longitude") + ylab("Latitude")
myPalette <- colorRampPalette(rev(brewer.pal(11,"Spectral")))
sc1 <- scale_colour_gradientn(colours = myPalette(100))
map_1 <- eqmap + sc1
#plot of mag and depth
library(ggplot2)
library(maps)
library(grid)
wmap2 <- borders("world",colour = "darkgoldenrod1",fill="darkgoldenrod1")
magdepmap <- ggplot() + wmap2
magdepmap <-  magdepmap +
geom_point(data = df_2, alpha = 0.25,aes(x = Longitude, y = Latitude, size = Mag, colour = Focal_Depth_km)) +
labs(x = NULL, y = NULL) +
scale_colour_gradient("Depth [km]", high = "red") +
scale_size("Magnitude") +
theme_classic() +
theme(axis.line = element_blank(), axis.text = element_blank(),
axis.ticks = element_blank(),
plot.margin=unit(c(3, 0, 0, 0),"mm"),
legend.text = element_text(size = 6),
legend.title = element_text(size = 8, face = "plain"),
panel.background = element_rect(fill='#D6E7EF'))
wmap_depth <- borders("world",colour = "gray50",fill="gray50")
eqmap_depth <- ggplot() + wmap_depth
eqmap_depth <- eqmap_depth + geom_point(data=df_2,aes(x=as.numeric(Longitude),y=as.numeric(Latitude),color=Focal_Depth_km)) +ggtitle("Focal Depth of Epicenters of Earthquakes on World Map")+
xlab("Longitude") + ylab("Latitude")
myPalette <- colorRampPalette(rev(brewer.pal(11,"Spectral")))
sc1_depth <- scale_colour_gradientn(colours = myPalette(100))
map_2 <- eqmap_depth + sc1_depth
#correlation for entire df_2 dataset
df_2_new <- df_2[,c(1,3,4,5,6,7,9)]
summary(df_2_new)
head(df_2_new)
nrow(df_2_new)
library(ggcorrplot)
library(corrplot)
res <- cor(df_2_new)
View(df_2)
library(ggplot2)
#Creating tables
df_Cont <- table(df$Continent)
df_Nation <- table(df$Country)
df_Plate <- table(df$Tectonic_Plate)
df_Magclass <- table(df$Mag_class)
df_Depthclass <- table(df$Depth_class)
#Barplots for the tables created above
bp_1 <- ggplot(df,aes(Continent))+geom_bar()+xlab("Continent")+ylab("Number of Earthquakes")+ggtitle("Number of Earthquake Occurences in each continent")
bp_2 <- ggplot(df,aes(Tectonic_Plate))+geom_bar()+xlab("Tectonic Plate")+ylab("Number of Earthquakes")+ggtitle("Number of Earthquake Occurences in each tectonic plate")+
theme(axis.text.x = element_text(angle = 90))
bp_3 <- ggplot(df,aes(Mag_class))+geom_bar()+xlab("Magnitude Class based on Richter scale")+ylab("Number of Earthquakes")+ggtitle("Number of Earthquake Occurences with respect to Magnitude class")
bp_4 <- ggplot(df_2,aes(Depth_class))+geom_bar()+xlab("Depth Class based on Focal Depth of Earthquake")+ylab("Number of Earthquakes")+ggtitle("Number of Earthquake Occurences with respect to Depth class")
library(dplyr)
yearly_counts <- df %>%
count(Year,Continent)
lp_1 <- ggplot(data=yearly_counts,aes(x=Year,y=n,color=Continent))+
ylab('Frequency')+
geom_line()+
facet_wrap(facets = vars(Continent))+
ggtitle("Number of Earthquake Occurences in each continent over the years")
lp_2 <- ggplot(data=df,aes(x=Year,y=Mag))+
geom_line(aes(color=Continent),size=1)+
facet_wrap(facets = vars(Continent))+
ggtitle("Magnitude of earthquakes in each continent over the years")
box_1 <- ggplot(df,aes(x=Continent,y=Mag))+
geom_boxplot(aes(color=Continent))+
ylab("Magnitude")+
ggtitle("Trends of Magnitude in each continent")
box_2 <- ggplot(df,aes(x=Mag_class,y=Mag))+
geom_boxplot(aes(color=Mag_class))+ylab("Magnitude")+
xlab('Magnitude Class')+guides(color=guide_legend(title="Magnitude Class"))+
ggtitle("Trends of Magnitude with respect to Magnitude class")
box_3 <- ggplot(df_2,aes(x=Continent,y=Focal_Depth_km))+
geom_boxplot(aes(color=Continent))+
ylab("Focal Depth (km)")+
ggtitle("Trends of Focal Depth in each continent")
box_4 <- ggplot(df_2,aes(x=Depth_class,y=Focal_Depth_km))+
geom_boxplot(aes(color=Depth_class))+ylab("Focal Depth")+
xlab('Depth Class')+guides(color=guide_legend(title="Depth Class"))+
ggtitle("Trends of Focal Depth with respect to Depth class")
library(maps)
library(grid)
library(RColorBrewer)
wmap <- borders("world",colour = "gray50",fill="gray50")
eqmap <- ggplot() + wmap
eqmap <- eqmap + geom_point(data=df,aes(x=as.numeric(Longitude),y=as.numeric(Latitude),color=Mag)) +ggtitle("Epicenters of Earthquakes on World Map")+
xlab("Longitude") + ylab("Latitude")
myPalette <- colorRampPalette(rev(brewer.pal(11,"Spectral")))
sc1 <- scale_colour_gradientn(colours = myPalette(100))
map_1 <- eqmap + sc1
#plot of mag and depth
library(ggplot2)
library(maps)
library(grid)
wmap2 <- borders("world",colour = "darkgoldenrod1",fill="darkgoldenrod1")
magdepmap <- ggplot() + wmap2
magdepmap <-  magdepmap +
geom_point(data = df_2, alpha = 0.25,aes(x = Longitude, y = Latitude, size = Mag, colour = Focal_Depth_km)) +
labs(x = NULL, y = NULL) +
scale_colour_gradient("Depth [km]", high = "red") +
scale_size("Magnitude") +
theme_classic() +
theme(axis.line = element_blank(), axis.text = element_blank(),
axis.ticks = element_blank(),
plot.margin=unit(c(3, 0, 0, 0),"mm"),
legend.text = element_text(size = 6),
legend.title = element_text(size = 8, face = "plain"),
panel.background = element_rect(fill='#D6E7EF'))
wmap_depth <- borders("world",colour = "gray50",fill="gray50")
eqmap_depth <- ggplot() + wmap_depth
eqmap_depth <- eqmap_depth + geom_point(data=df_2,aes(x=as.numeric(Longitude),y=as.numeric(Latitude),color=Focal_Depth_km)) +ggtitle("Focal Depth of Epicenters of Earthquakes on World Map")+
xlab("Longitude") + ylab("Latitude")
myPalette <- colorRampPalette(rev(brewer.pal(11,"Spectral")))
sc1_depth <- scale_colour_gradientn(colours = myPalette(100))
map_2 <- eqmap_depth + sc1_depth
#correlation for entire df_2 dataset
df_2_new <- df_2[,c(1,3,4,5,6,7,8)]
summary(df_2_new)
head(df_2_new)
nrow(df_2_new)
library(ggcorrplot)
library(corrplot)
res <- cor(df_2_new)
round(res,2)
res_2 <- cor(df_2_new,use = "complete.obs")
res_2
corr <- round(cor(res),1)
corr_eqplot <- ggcorrplot(corr,hc.order=TRUE,
type="lower",
lab=TRUE,
lab_size = 3,
method="circle",
colors=c("red","white","green"),
title="Correlogram of variables used from
earthquake data",
ggtheme = theme_bw)
library(car)
library(caret)
library(tidyverse)
library(stats)
model = lm (Mag~Year+Latitude+Longitude+Focal_Depth_km+Deaths+Injuries,data=df_2)
model
summary(model)
confint(model)
df_2train <- df_2[ which(df_2$Year >= 1976 & df_2$Year <= 2022),]
df_2test <- df_2[which(df_2$Year >= 1880 & df_2$Year <= 1975),]
model2_train = lm (Mag~Year+Focal_Depth_km+Latitude+Injuries,data=df_2train)
model2_train
summary(model2_train)
pred_2 = model2_train %>%
predict(df_2test)
pred_2
predict(model2_train,newdata=df_2test,interval="confidence")
predict(model2_train,newdata=df_2test,interval="prediction")
plot(model2_train,1)
plot(model2_train,2)
plot(model2_train,3)
plot(model2_train,4)
plot(model2_train,5)
summary(pred_2)
summary(df_2test$Mag)
#logistic regression for depth class
set.seed(123)
logreg <- glm(Depth_class~Year+Latitude+Longitude+Focal_Depth_km+Deaths+Injuries+Mag , family = binomial, data = df_2train)
summary(logreg)
predict_logreg <- predict(logreg,df_2test,type="response")
predict_logreg_values <- ifelse(predict_logreg >0.5, "Shallow","Intermediate")
cmlogreg <- table(df_2test$Depth_class, predict_logreg_values)
#tabulate confusion matrix
cmlogreg
(14+135)/nrow(df_2test)
#random forest for mag class
library(randomForest)
set.seed(123)
rfmodel_eq <- randomForest(Mag_class~Year+Latitude+Longitude+Mag+Focal_Depth_km+Deaths+Injuries,data=df_2train)
rfmodel_eq
prediction_eq_rf <- predict(rfmodel_eq, newdata = df_2test)
head(prediction_eq_rf)
table(prediction_eq_rf, df_2test$Mag_class)
(8+5+53+24+57)/nrow(df_2test)
#random forest for depth class
library(randomForest)
set.seed(123)
rfmodel_eq_2 <- randomForest(Depth_class~Year+Latitude+Longitude+Mag+Focal_Depth_km+Deaths+Injuries,data=df_2train)
rfmodel_eq_2
prediction_eq_2_rf <- predict(rfmodel_eq_2, newdata = df_2test)
head(prediction_eq_2_rf)
table(prediction_eq_2_rf, df_2test$Depth_class)
(14+136)/nrow(df_2test)
#boosting for magnitude class
set.seed(123)
library(gbm)
model_gbm = gbm(Mag_class~Year+Latitude+Longitude+Mag+Focal_Depth_km+Deaths+Injuries,data = df_2train,distribution = "multinomial",cv.folds = 10,shrinkage = .01,n.minobsinnode = 10,n.trees = 500) # 500 tress to be built
summary(model_gbm)
pred_test = predict.gbm(object = model_gbm,newdata = df_2test,n.trees = 500,   type = "response")# 500 tress to be built
head(pred_test)
labels = colnames(pred_test)[apply(pred_test, 1, which.max)]
result = data.frame(df_2test$Mag_class, labels)
head(result)
library(caret)
cm = confusionMatrix(df_2test$Mag_class, as.factor(labels))
print(cm)
#boosting for depth class
set.seed(123)
library(gbm)
model_gbm_2 = gbm(Depth_class~Year+Latitude+Longitude+Mag+Focal_Depth_km+Deaths+Injuries,data = df_2train,distribution = "multinomial",cv.folds = 10,shrinkage = .01,n.minobsinnode = 10,n.trees = 500) # 500 tress to be built
summary(model_gbm_2)
pred_test_2 = predict.gbm(object = model_gbm_2,newdata = df_2test,n.trees = 500,   type = "response")# 500 tress to be built
head(pred_test_2)
labels = colnames(pred_test_2)[apply(pred_test_2, 1, which.max)]
result = data.frame(df_2test$Depth_class, labels)
head(result)
library(caret)
cm_2 = confusionMatrix(df_2test$Depth_class, as.factor(labels))
print(cm_2)
#decision tree for depth class
library(rpart)
library(rpart.plot)
library(RColorBrewer)
library(rattle)
dtree <- rpart(Depth_class~Year+Latitude+Longitude+Mag+Focal_Depth_km+Deaths+Injuries,data=df_2train,method="class",
control = rpart.control(minsplit=20,minbucket = 7,maxdepth = 10,usesurrogate = 2,xval = 10))
dtree
plot(dtree)
text(dtree)
par(xpd=NA,mar=rep(0.7,4))
plot(dtree,compress = TRUE)
text(dtree,cex=0.7,use.n = TRUE,fancy=FALSE,all=TRUE)
library(rpart.plot)
prp(dtree,faclen=0,box.palette="Reds",cex=0.8,extra=1)
#decision tree for mag class
library(rpart)
library(rpart.plot)
library(RColorBrewer)
library(rattle)
dtree_2 <- rpart(Mag_class~Year+Latitude+Longitude+Mag+Focal_Depth_km+Deaths+Injuries,data=df_2train,method="class",
control = rpart.control(minsplit=20,minbucket = 7,maxdepth = 10,usesurrogate = 2,xval = 10))
dtree_2
plot(dtree_2)
text(dtree_2)
par(xpd=NA,mar=rep(0.7,4))
plot(dtree_2,compress = TRUE)
text(dtree_2,cex=0.7,use.n = TRUE,fancy=FALSE,all=TRUE)
library(rpart.plot)
prp(dtree_2,faclen=0,box.palette="Reds",cex=0.8,extra=1)
#raster map (forecasting disaster-prone zone)
#latitude
data_eu <- read.csv("C:/Users/Muthug/Desktop/INFO521 Intro to ML/fpquake_eu.csv")
library(forecast)
set.seed(123)
latitude_ts <- ts(data_eu$Latitude,start=c(1880,7),end=c(2022,9),frequency = 12)
latitude_fit <- auto.arima(latitude_ts)
latitude_fc <- forecast(latitude_fit,25)
latitude_summ <- summary(latitude_fc)
#longitude
library(forecast)
set.seed(123)
longitude_ts <- ts(data_eu$Longitude,start=c(1880,7),end=c(2022,9),frequency = 12)
longitude_fit <- auto.arima(longitude_ts)
longitude_fc <- forecast(longitude_fit,25)
longitude_summ <- summary(longitude_fc)
#visualizing disaster prone areas using map
#actual data points
wmap_fc_1 <- borders("world",colour = "gray50",fill="gray50")
eqmap_fc_1<- ggplot() + wmap_fc_1
eqmap_fc_1 <- eqmap_fc_1 + geom_point(data=data_eu,aes(x=as.numeric(Longitude),y=as.numeric(Latitude),color=Mag)) +ggtitle("EU Plate Epicenters of Earthquakes on World Map")+
xlab("Longitude") + ylab("Latitude")
myPalette_fc_1 <- colorRampPalette(rev(brewer.pal(11,"Spectral")))
sc1_fc_1 <- scale_colour_gradientn(colours = myPalette_fc_1(100))
eqmap_fc_1 + sc1_fc_1
#predicted points using arima
library(ggshadow)
data_eu_predict <- data_eu <- read.csv("C:/Users/Muthug/Desktop/INFO521 Intro to ML/fpquake_eu_predict.csv")
wmap_fc_2 <- borders("world",colour = "gray50",fill="gray50")
eqmap_fc_2<- ggplot() + wmap_fc_2
eqmap_fc_2 <- eqmap_fc_2 + geom_glowpoint(data=data_eu_predict,aes(x=as.numeric(Longitude),y=as.numeric(Latitude)),color = "#6bb857",alpha=0.8,shadowcolor="#6bb857",shadowalpha=0.1) +ggtitle("Predicted Epicenters On Eurasian (EU) Plate")+
xlab("Longitude") + ylab("Latitude") + theme_void()
eqmap_fc_2
library(gridExtra)
grid.arrange(bp_1,bp_2,bp_3,bp_4, ncol=2)
library(gridExtra)
grid.arrange(lp_1,lp_2, ncol=1)
library(gridExtra)
grid.arrange(box_1,box_2,box_3,box_4, ncol=2)
library(gridExtra)
grid.arrange(box_1,box_2,box_3,box_4, ncol=2)
library(gridExtra)
grid.arrange(map_1,mapdepmap,map_2, ncol=1)
library(gridExtra)
grid.arrange(map_1,magdepmap,map_2, ncol=1)
library(gridExtra)
grid.arrange(corr_eqplot, ncol=1)
#Reading the main dataset
data <- read.csv("C:/Users/Muthug/Desktop/INFO521 Intro to ML/fpquake.csv")
#Removing unnecessary columns from main dataset
df <- data[-c(2:8,14,16,18,20,22,24,26,28,30,32,34,36,38)]
#Categorizing Earthquake Magnitude on the basis of Richter Scale
df$Mag_class <- ifelse(df$Mag>=4&df$Mag<=4.9,"Light",NA)
df$Mag_class <- ifelse(df$Mag>=5&df$Mag<=5.9,"Moderate",df$Mag_class)
df$Mag_class <- ifelse(df$Mag>=6&df$Mag<=6.9,"Strong",df$Mag_class)
df$Mag_class <- ifelse(df$Mag>=7&df$Mag<=7.9,"Major",df$Mag_class)
df$Mag_class <- ifelse(df$Mag>=8&df$Mag<=9.9,"Great",df$Mag_class)
#Categorizing Earthquakes on the basis of Focal Depth
df$Depth_class <- ifelse(df$Focal_Depth_km>=0&df$Focal_Depth_km<=70,"Shallow",NA)
df$Depth_class <- ifelse(df$Focal_Depth_km>=71&df$Focal_Depth_km<=300,"Intermediate",df$Depth_class)
df$Depth_class <- ifelse(df$Focal_Depth_km>=301&df$Focal_Depth_km<=700,"Deep",df$Depth_class)
#Converting columns into factor type of data
df$Country <- as.factor(df$Country)
df$Continent <- as.factor(df$Continent)
df$Tectonic_Plate <- as.factor(df$Tectonic_Plate)
df$Mag_class <- as.factor(df$Mag_class)
df$Depth_class <- as.factor(df$Depth_class)
#Removing unwanted columns from main dataset
df <- df[-c(8,10:18)]
summary(df)
#Reading the new subset
data_2 <- read.csv("C:/Users/Muthug/Desktop/INFO521 Intro to ML/fpquake2.csv")
#Removing unnecessary columns from subset
df_2 <- data_2[-c(2:8,14,16,18,20,22,24,26,28,30,32,34,36,38)]
#Categorizing Earthquake Magnitude on the basis of Richter Scale
df_2$Mag_class <- ifelse(df_2$Mag>=4&df_2$Mag<=4.9,"Light",NA)
df_2$Mag_class <- ifelse(df_2$Mag>=5&df_2$Mag<=5.9,"Moderate",df_2$Mag_class)
df_2$Mag_class <- ifelse(df_2$Mag>=6&df_2$Mag<=6.9,"Strong",df_2$Mag_class)
df_2$Mag_class <- ifelse(df_2$Mag>=7&df_2$Mag<=7.9,"Major",df_2$Mag_class)
df_2$Mag_class <- ifelse(df_2$Mag>=8&df_2$Mag<=9.9,"Great",df_2$Mag_class)
#Categorizing Earthquakes on the basis of Focal Depth
df_2$Depth_class <- ifelse(df_2$Focal_Depth_km>=0&df_2$Focal_Depth_km<=70,"Shallow",NA)
df_2$Depth_class <- ifelse(df_2$Focal_Depth_km>=71&df_2$Focal_Depth_km<=300,"Intermediate",df_2$Depth_class)
df_2$Depth_class <- ifelse(df_2$Focal_Depth_km>=301&df_2$Focal_Depth_km<=700,"Deep",df_2$Depth_class)
#Converting columns into factor type of data
df_2$Country <- as.factor(df_2$Country)
df_2$Continent <- as.factor(df_2$Continent)
df_2$Tectonic_Plate <- as.factor(df_2$Tectonic_Plate)
df_2$Mag_class <- as.factor(df_2$Mag_class)
df_2$Depth_class <- as.factor(df_2$Depth_class)
#Removing unwanted columns from subset
df_2 <- df_2[-c(8,10:18)]
summary(df_2)
View(df_2)
eq_mean = aggregate(df_2[,6],by=list(df_2$Country),FUN=mean, na.rm=TRUE)
eq_mean
View(eq_mean)
max(eq_mean)
eq_mean = aggregate(df_2[,6],by=list(df_2$Country),FUN=mean, na.rm=TRUE)
eq_mean
max(eq_mean$x)
eq_mean = aggregate(df_2[,6],by=list(df_2$Country),FUN=mean, na.rm=TRUE)
eq_mean
which(max(eq_mean$x))
eq_mean = aggregate(df_2[,6],by=list(df_2$Country),FUN=mean, na.rm=TRUE)
eq_mean
which.max(eq_mean$x)
eq_mean_2 = aggregate(df_2[,6],by=list(df_2$Tectonic_Plate),FUN=mean, na.rm=TRUE)
eq_mean_2
which.max(eq_mean_2$x)
eq_sum = aggregate(df_2[,7],by=list(df_2$Country),FUN=sum, na.rm=TRUE)
eq_sum
which.max(eq_sum$x) #
View(eq_sum)
eq_sum_2 = aggregate(df_2[,7],by=list(df_2$Tectonic_Plate),FUN=sum, na.rm=TRUE)
eq_sum_2
which.max(eq_sum_2$x)
eq_count = aggregate(iris[,1],by=list(df_2$Country),FUN=length)
eq_count = aggregate(iris[,2],by=list(df_2$Country),FUN=length)
